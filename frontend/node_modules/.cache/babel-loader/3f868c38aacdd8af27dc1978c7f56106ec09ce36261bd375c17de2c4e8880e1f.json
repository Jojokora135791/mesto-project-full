{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.getContent = token => {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      }).then(res => this._checkResult(res));\n    };\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkResult(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error ${res.status}`);\n    } else {\n      return res.json();\n    }\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n  patchUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._checkResult(res));\n  }\n  addNewCard({\n    name,\n    link\n  }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._checkResult(res));\n  }\n  deleteCard(cardId, isOwn) {\n    return isOwn ? fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResult(res)) : \"\";\n  }\n  likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n  dislikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n  editAvatar({\n    avatar\n  }) {\n    console.log(avatar);\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => this._checkResult(res));\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this.likeCard(cardId) : this.dislikeCard(cardId);\n  }\n\n  // АВТОРИЗАЦИЯ - ПЕРЕНЕСТИ\n  register(password, email) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-65/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => this._checkResult(res));\n  }\n  authorize(identifier, password) {\n    return fetch(`${this._baseUrl}/auth/local`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        identifier,\n        password\n      })\n    }).then(res => this._checkResult(res));\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    authorization: \"64e76916-bb9d-45f2-aa0a-555c04a49e1a\",\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","getContent","token","fetch","_baseUrl","method","then","res","_checkResult","_headers","ok","Promise","reject","status","json","getInitialCards","getUserInfo","patchUserInfo","name","about","body","JSON","stringify","addNewCard","link","deleteCard","cardId","isOwn","likeCard","dislikeCard","editAvatar","avatar","console","log","changeLikeCardStatus","isLiked","register","password","email","authorize","identifier","api","authorization"],"sources":["C:/Users/Олег/Desktop/YA.Projects/mesto-project-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResult(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Error ${res.status}`);\r\n    } else {\r\n      return res.json();\r\n    }\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  patchUserInfo({ name, about }) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  addNewCard({ name, link }) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  deleteCard(cardId, isOwn) {\r\n    return isOwn\r\n      ? fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n          method: \"DELETE\",\r\n          headers: this._headers,\r\n        }).then((res) => this._checkResult(res))\r\n      : \"\";\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  dislikeCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  editAvatar({ avatar }) {\r\n    console.log(avatar);\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then((res) => this._checkResult(res));\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return isLiked ? this.likeCard(cardId) : this.dislikeCard(cardId);\r\n  }\r\n\r\n  // АВТОРИЗАЦИЯ - ПЕРЕНЕСТИ\r\nregister (password, email) {\r\n  return fetch(`https://mesto.nomoreparties.co/v1/cohort-65/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({password, email}),\r\n  }).then((res) => this._checkResult(res));\r\n};\r\n\r\n authorize  (identifier, password)  {\r\n  return fetch(`${this._baseUrl}/auth/local`, {\r\n    method: \"POST\",\r\n    headers: this._headers,\r\n    body: JSON.stringify({ identifier, password }),\r\n  }).then((res) => this._checkResult(res));\r\n};\r\n\r\ngetContent = (token) => {\r\n  return fetch(`${this._baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\",\r\n    },\r\n    \r\n  }).then((res) => this._checkResult(res));\r\n};\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65\",\r\n  headers: {\r\n    authorization: \"64e76916-bb9d-45f2-aa0a-555c04a49e1a\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}