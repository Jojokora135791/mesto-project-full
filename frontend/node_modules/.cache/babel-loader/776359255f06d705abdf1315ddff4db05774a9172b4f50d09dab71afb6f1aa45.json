{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\u041E\\u043B\\u0435\\u0433/Desktop/YA.Projects/mesto-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import CurrentUserContext from\"../contexts/CurrentUserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditProfilePopup(props){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];// Подписка на контекст\nvar currentUser=React.useContext(CurrentUserContext);// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setName(currentUser.name);setDescription(currentUser.about);},[currentUser]);function handleChangeName(e){setName(e.target.value);}function handleChangeDescription(e){setDescription(e.target.value);}function handleSubmit(e){// Запрещаем браузеру переходить по адресу формы\ne.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nprops.onUpdateUser({name:name,about:description});}var buttonName=\"\";if(props.buttonName){buttonName=\"Сохранение...\";}else{buttonName=\"Сохранить\";}return/*#__PURE__*/_jsxs(PopupWithForm,{name:\"edit-profile\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",buttonName:buttonName,isOpen:props.isOpen,isClose:props.onClose,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{className:\"popup__label\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"author\",type:\"text\",className:\"popup__input\",placeholder:\"\\u0418\\u043C\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430\",value:name,minLength:\"2\",maxLength:\"40\",required:true,onChange:handleChangeName}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__input-error popup__input-error_type_author\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"popup__label\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"job\",type:\"text\",className:\"popup__input\",placeholder:\"\\u0417\\u0430\\u043D\\u044F\\u0442\\u0438\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430\",value:description,minLength:\"2\",maxLength:\"40\",required:true,onChange:handleChangeDescription}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__input-error popup__input-error_type_job\"})]})]});}export default EditProfilePopup;","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","jsx","_jsx","jsxs","_jsxs","EditProfilePopup","props","_React$useState","useState","_React$useState2","_slicedToArray","name","setName","_React$useState3","_React$useState4","description","setDescription","currentUser","useContext","useEffect","about","handleChangeName","e","target","value","handleChangeDescription","handleSubmit","preventDefault","onUpdateUser","buttonName","title","isOpen","isClose","onClose","onSubmit","children","className","type","placeholder","minLength","maxLength","required","onChange"],"sources":["C:/Users/Олег/Desktop/YA.Projects/mesto-project-react/src/components/EditProfilePopup.js"],"sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  let buttonName = \"\";\r\n\r\n  if (props.buttonName) {\r\n    buttonName = \"Сохранение...\";\r\n  } else {\r\n    buttonName = \"Сохранить\";\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n      buttonName={buttonName}\r\n      isOpen={props.isOpen}\r\n      isClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"popup__label\">\r\n        <input\r\n          name=\"author\"\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          placeholder=\"Имя автора\"\r\n          value={name}\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          required\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className=\"popup__input-error popup__input-error_type_author\"></span>\r\n      </label>\r\n      <label className=\"popup__label\">\r\n        <input\r\n          name=\"job\"\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          placeholder=\"Занятие автора\"\r\n          value={description}\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          required\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className=\"popup__input-error popup__input-error_type_job\"></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}